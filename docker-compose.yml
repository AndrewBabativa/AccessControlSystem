services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.20
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - backend

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "Test1234!"
      ACCEPT_EULA: "Y"
    networks:
      - backend
    volumes:
      - sqlserverdata:/var/opt/mssql

  accesscontrol-api:
    build:
      context: ./AccessControlSystem.Backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
      - kafka
      - sqlserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ElasticSettings__Uri=http://elasticsearch:9200
      - ElasticSettings__DefaultIndex=permissions
      - ElasticSettings__Username=elastic
      - ElasticSettings__Password=
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=AccessControlDb;User Id=sa;Password=Test1234!;TrustServerCertificate=True
    networks:
      - backend

  accesscontrol-frontend:
    build:
      context: ./AccessControlSystem.Web
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    networks:
      - backend

networks:
  backend:

volumes:
  sqlserverdata:
